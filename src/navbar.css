/*
 * Important variables:
 * Petal width: 50px
 * Petal height: 150px
 * Center circle width/height: 50px
 * Total height/width: 50 + (150 * 2) = 350px
*/

.petal {
    box-sizing: border-box;
    width: 100%;
    height: 350px;
    margin: 0 auto;
    /* Move the center down by the height of the petals */
    padding: 150px 0 0 0;

    /* Create a new stacking context */
    position: relative;
    bottom: 0;
    right: 0;
    left: 0;
}

.petal-center {
    border-radius: 100%;
    background-color: gray;
    width: 50px;
    height: 50px;
    /* Center horizontally on the page */
    margin: 0 auto;
}

.petal-list {
    box-sizing: border-box;
    width: 100%;
    /* The container for the petals needs to be as tall as the entire flower */
    height: 350px;
    position: absolute;
    top: 0;
    left: 0;
    padding: 0;
    margin: 0;

    /* This shouldn't actually do anything of note but let's not gamble. */
    list-style-type: none;
}

/* In charge of positioning the petal around the center circle */
.petal-wrapper {
    /* Petal dimensions */
    width: 50px;
    height: 150px;
    box-sizing: border-box;
    overflow: visible;
    margin: 0 auto;
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;

    transition-timing-function: ease-in-out;
    transition-duration: 400ms;
    /* 25px is half the size of the center */
    transform-origin: center calc(100% + 25px);
}

/* In charge of resizing the petal on hover/focus */
.petal-leaf {
    background-color: gray;
    width: 100%;
    height: 100%;
    /* TODO: border-radius is magical and I'm sure there's a way to make these look good using it */
    /* The border-radius is providing the "petal" shape */
    border-radius: 50% 50% 100% 100%;
    transition-timing-function: ease-in-out;
    transition-duration: 400ms;
}

.petal-leaf:hover,
.petal-leaf:focus {
    transform: scale(1.1, 1.1);
}

.petal .link {
    display: inline-block;
    height: 100%;
    width: 100%;

    text-align: center;
    /* Links default to blue on most browsers */
    color: inherit;
}
